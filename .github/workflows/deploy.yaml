name: Deploy Node.js App to EC2 via ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 400 key.pem

          HOST=${{ secrets.EC2_HOST }}
          USER=${{ secrets.EC2_USER }}
          REGION=${{ secrets.AWS_REGION }}
          ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          REPO=${{ secrets.ECR_REPOSITORY }}

          ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << EOF
            docker stop \$(docker ps -q) || true
            docker rm \$(docker ps -a -q) || true
            aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
            docker pull $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:latest
            docker run -d -p 80:3000 $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO:latest
          EOF

